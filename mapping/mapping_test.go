package mapping

import (
	"context"
	"encoding/json"
	"fmt"
	"os"

	"github.com/google/uuid"
	"github.com/joho/godotenv"
	"github.com/psyark/notionapi"
)

type Object struct {
	Cover *notionapi.File       `notion:",cover"`
	Icon  notionapi.FileOrEmoji `notion:",icon"`
	// Title_Raw       notionapi.RichTextArray `notion:"title"`  // ÂêçÂâç
	Title_String    string `notion:"title"`  // ÂêçÂâç
	RichText_String string `notion:"%40RTE"` // „ÉÜ„Ç≠„Çπ„Éà
	// RichText_Raw    notionapi.RichTextArray `notion:"%40RTE"` // „ÉÜ„Ç≠„Çπ„Éà
	Email       string  `notion:"hclY"`     // „É°„Éº„É´
	URL         string  `notion:"Udz%3F"`   // URL
	PhoneNumber string  `notion:"qjI%3B"`   // ÈõªË©±
	Number      float64 `notion:"p%7Bq%3E"` // Êï∞ÂÄ§
	Checkbox    bool    `notion:"%3DqUq"`   // „ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„Çπ
	// Date_Time   time.Time            `notion:"OL%3C%3F"` // Êó•‰ªò
	Date_Raw *notionapi.DateValue `notion:"OL%3C%3F"` // Êó•‰ªò
	// LastEditedTime_Interface interface{} `notion:"CHbM"`     // ÊúÄÁµÇÊõ¥Êñ∞Êó•ÊôÇ
	// CreatedTime_Interface    interface{} `notion:"~gd%5C"`   // ‰ΩúÊàêÊó•ÊôÇ
	// Select           interface{} `notion:"rMGi"`     // „Çª„É¨„ÇØ„Éà
	// Multi_select     interface{} `notion:"%3Ewkp"`   // „Éû„É´„ÉÅ„Çª„É¨„ÇØ„Éà
	// Status           interface{} `notion:"GCe%3C"`   // „Çπ„ÉÜ„Éº„Çø„Çπ
	// Files            interface{} `notion:"sAR_"`     // „Éï„Ç°„Ç§„É´&„É°„Éá„Ç£„Ç¢
	Relation1 []uuid.UUID `notion:"wpAL"` // „É™„É¨„Éº„Ç∑„Éß„É≥1
	// Relation2        interface{} `notion:"NBWw"`     // „É™„É¨„Éº„Ç∑„Éß„É≥2
	// Rollup           interface{} `notion:"Fo%7DT"`   // „É≠„Éº„É´„Ç¢„ÉÉ„Éó
	// Formula          interface{} `notion:"ZTlY"`     // Èñ¢Êï∞
	// People           interface{} `notion:"BvQz"`     // „É¶„Éº„Ç∂„Éº
	// Created_by       interface{} `notion:"ig%40H"`   // ‰ΩúÊàêËÄÖ
	// Last_edited_by   interface{} `notion:"FY%5B%7C"` // ÊúÄÁµÇÊõ¥Êñ∞ËÄÖ
}

const databaseID = "8b6685786cc647ecb614dbd9b3ee5113"

var client *notionapi.Client

func init() {
	if err := godotenv.Load("../credentials.env"); err != nil {
		panic(err)
	}
	client = notionapi.NewClient(os.Getenv("NOTION_API_KEY"))
}

// func ExampleDecodePage() {
// 	ctx := context.Background()

// 	// db, _ := client.RetrieveDatabase(ctx, databaseID)
// 	// Create(Object{}, db.Properties)

// 	pagi, err := client.QueryDatabase(ctx, databaseID, &notionapi.QueryDatabaseOptions{})
// 	if err != nil {
// 		panic(err)
// 	}

// 	for _, page := range pagi.Results {
// 		obj := Object{}
// 		if err := DecodePage(&obj, page); err != nil {
// 			panic(err)
// 		}

// 		if page.ID != uuid.MustParse("5558674db89c4a999f66f18ae1b38632") {
// 			d, _ := json.Marshal(obj)
// 			fmt.Println(string(d))
// 		}
// 	}

// 	// Unordered output:
// 	// {"Cover":{"external":{"url":"https://www.notion.so/images/page-cover/woodcuts_2.jpg"},"type":"external"},"Icon":{"type":"emoji","emoji":"üç£"},"Title_Raw":[{"annotations":{"bold":false,"code":false,"color":"default","italic":false,"strikethrough":false,"underline":false},"href":null,"plain_text":"Item 1","text":{"content":"Item 1","link":null},"type":"text"}],"Title_String":"Item 1","RichText_String":"The quick brown fox The quick brown fox The quick brown fox The quick brown fox The quick brown fox The quick brown fox The quick brown fox The quick brown fox The quick brown fox The quick brown fox The quick brown fox The quick brown fox The quick brown fox","Email":"me@example.com","URL":"http://example.com","PhoneNumber":"123-456","Number":123,"Checkbox":true,"Date_Raw":{"start":"2022-08-09","end":null,"time_zone":null},"Relation1":["8b1cf30a-f939-4c1e-a09b-b63bcc890569"]}
// 	// {"Cover":null,"Icon":null,"Title_Raw":[{"annotations":{"bold":false,"code":false,"color":"default","italic":false,"strikethrough":false,"underline":false},"href":null,"plain_text":"Item 3","text":{"content":"Item 3","link":null},"type":"text"}],"Title_String":"Item 3","RichText_String":"","Email":"","URL":"","PhoneNumber":"","Number":1.2143432785732895e+27,"Checkbox":false,"Date_Raw":{"start":"2022-08-09T00:00:00.000+09:00","end":null,"time_zone":null},"Relation1":["ba53d412-b627-4e3d-9e2e-425e20988010"]}
// 	// {"Cover":null,"Icon":{"external":{"url":"https://wiki.factorio.com/images/Electric_furnace_entity.png"},"type":"external"},"Title_Raw":[{"annotations":{"bold":false,"code":false,"color":"default","italic":false,"strikethrough":false,"underline":false},"href":null,"plain_text":"Item 2","text":{"content":"Item 2","link":null},"type":"text"}],"Title_String":"Item 2","RichText_String":"Text Page Link  Web Link Bold Italic Underline Strike Code Formula Red @Keiichi Yoshikawa 2022-09-28 ","Email":"","URL":"","PhoneNumber":"","Number":45.67,"Checkbox":false,"Date_Raw":{"start":"2022-08-09","end":"2022-08-11","time_zone":null},"Relation1":[]}
// }

func ExampleUpdatePageFrom() {
	ctx := context.Background()

	const pageID = "4e1f3caad88e4993b25bf5444828779d"

	page, err := client.RetrievePage(ctx, pageID)
	if err != nil {
		panic(err)
	}

	obj := Object{
		Number:       123,
		Title_String: "UpdatePageFrom Test",
		Date_Raw:     &notionapi.DateValue{Start: "2022-12-25"},
		Relation1:    []uuid.UUID{},
		Icon:         &notionapi.File{Type: "external", External: &notionapi.ExternalFileData{URL: "https://picsum.photos/id/1/200"}},
	}

	opt, err := UpdatePageFrom(obj, *page)
	if err != nil {
		panic(err)
	}

	if opt != nil {
		if _, err := client.UpdatePage(ctx, pageID, opt); err != nil {
			panic(err)
		}
	}

	if err := DecodePage(&obj, *page); err != nil {
		panic(err)
	}

	obj.Number += 1
	obj.Title_String += " HOGE "
	obj.Date_Raw = &notionapi.DateValue{Start: "2050-01-02"}
	obj.Icon = &notionapi.File{Type: "external", External: &notionapi.ExternalFileData{URL: "https://picsum.photos/id/2/200"}}

	opt, err = UpdatePageFrom(obj, *page)
	if err != nil {
		panic(err)
	}

	d, _ := json.MarshalIndent(opt, "", "  ")
	fmt.Println(string(d))
	// Output:
	// {
	//   "properties": {
	//     "OL%3C%3F": {
	//       "date": {
	//         "end": null,
	//         "start": "2050-01-02",
	//         "time_zone": null
	//       },
	//       "type": "date"
	//     },
	//     "p%7Bq%3E": {
	//       "number": 124,
	//       "type": "number"
	//     },
	//     "title": {
	//       "title": [
	//         {
	//           "href": null,
	//           "plain_text": "",
	//           "text": {
	//             "content": "UpdatePageFrom Test HOGE ",
	//             "link": null
	//           },
	//           "type": "text"
	//         }
	//       ],
	//       "type": "title"
	//     }
	//   },
	//   "icon": {
	//     "external": {
	//       "url": "https://picsum.photos/id/2/200"
	//     },
	//     "type": "external"
	//   }
	// }
}

func ExampleUpdatePageFrom_v2() {
	ctx := context.Background()
	page, err := client.RetrievePage(ctx, "7827e04d-d13a-4a16-8274-4ec55bd85c56")
	if err != nil {
		panic(err)
	}

	obj := Object{}
	if err := DecodePage(&obj, *page); err != nil {
		panic(err)
	}

	obj.Number = 0
	obj.RichText_String += ""
	obj.Date_Raw = nil
	obj.Icon = &notionapi.NoIcon{}

	opt, err := UpdatePageFrom(obj, *page)
	if err != nil {
		panic(err)
	}

	d, _ := json.MarshalIndent(opt, "", "  ")
	fmt.Println(string(d))
	// Output:
	// {
	//   "properties": {
	//     "OL%3C%3F": {
	//       "date": null,
	//       "type": "date"
	//     },
	//     "p%7Bq%3E": {
	//       "number": 0,
	//       "type": "number"
	//     }
	//   },
	//   "icon": null
	// }
}

func ExampleCreate() {
	ctx := context.Background()

	db, err := client.RetrieveDatabase(ctx, databaseID)
	if err != nil {
		panic(err)
	}

	obj := Object{
		Title_String:    "TTL",
		RichText_String: "RICH",
		Number:          3.14159265,
		Date_Raw:        &notionapi.DateValue{Start: "2022-11-25"},
		Relation1:       []uuid.UUID{uuid.MustParse("8b668578-6cc6-47ec-b614-dbd9b3ee5113")},
	}

	opt, err := CreatePageFrom(obj, db)
	if err != nil {
		panic(err)
	}

	d, _ := json.MarshalIndent(opt, "", "  ")
	fmt.Println(string(d))

	// Output:
	// {
	//   "parent": {
	//     "database_id": "8b668578-6cc6-47ec-b614-dbd9b3ee5113",
	//     "type": "database_id"
	//   },
	//   "properties": {
	//     "%40RTE": {
	//       "rich_text": [
	//         {
	//           "href": null,
	//           "plain_text": "",
	//           "text": {
	//             "content": "RICH",
	//             "link": null
	//           },
	//           "type": "text"
	//         }
	//       ],
	//       "type": "rich_text"
	//     },
	//     "OL%3C%3F": {
	//       "date": {
	//         "end": null,
	//         "start": "2022-11-25",
	//         "time_zone": null
	//       },
	//       "type": "date"
	//     },
	//     "p%7Bq%3E": {
	//       "number": 3.14159265,
	//       "type": "number"
	//     },
	//     "title": {
	//       "title": [
	//         {
	//           "href": null,
	//           "plain_text": "",
	//           "text": {
	//             "content": "TTL",
	//             "link": null
	//           },
	//           "type": "text"
	//         }
	//       ],
	//       "type": "title"
	//     },
	//     "wpAL": {
	//       "relation": [
	//         {
	//           "id": "8b668578-6cc6-47ec-b614-dbd9b3ee5113"
	//         }
	//       ],
	//       "type": "relation"
	//     }
	//   }
	// }
}
